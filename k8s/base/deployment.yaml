apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallet-service
  namespace: wallet
  labels:
    app: wallet
    service: wallet
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wallet
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: wallet
        service: wallet
        env: prod
        owner: wallet
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: /metrics
    spec:
      containers:
        - name: wallet
          image: registry.upx.exchange/exchange/wallet:v0.7.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          env:
            - name: PORT
              value: "8081"
            - name: HSM_ENDPOINT
              value: "http://hsm-mock.wallet.svc.cluster.local:9000"
            - name: HOT_WALLET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wallet-secret
                  key: HOT_WALLET_PASSWORD
            - name: HSM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: wallet-secret
                  key: HSM_API_KEY
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wallet-secret
                  key: DB_PASSWORD
            - name: KAFKA_SASL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: wallet-secret
                  key: HSM_API_KEY
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wallet-secret
                  key: HOT_WALLET_PASSWORD
          envFrom:
            - configMapRef:
                name: wallet-config
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
      imagePullSecrets:
        - name: registry-credentials
